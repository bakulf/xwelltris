dnl# -*- sh -*-
dnl#
dnl# $Id: configure.in,v 1.4 2003/02/27 08:27:51 leo Exp $
dnl#
dnl# Process this file with autoconf to produce a configure script.
dnl#
AC_INIT(src/main.cxx)

if test -z "${CFLAGS}"; then
    if test -z "${CCOPTS}"; then
        CCOPTS='-O'
    fi
    CFLAGS="$CCOPTS"
fi

dnl# Checks for programs.
dnl AC_MAKE_SET

AC_CANONICAL_HOST
changequote(,)dnl
ARCH=`echo $host | sed 's/\([^-]*\)-[^-]*-\([^-]*\)/\1-\2/'`
changequote([,])dnl

dnl Checks for programs.
AC_PREFIX_DEFAULT(/usr)
AC_ISC_POSIX
AC_AIX
AC_MINIX
dnl AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_PROG(RM, rm, rm)
AC_PATH_PROG(CP, cp, cp)

AC_SUBST(SHAREFLAGS)
AC_SUBST(LD_SHAREFLAGS)
AC_SUBST(PLUGINS)
AC_SUBST(DEB)
AC_SUBST(IFACEOBJS)
AC_SUBST(IFACELIBS)
AC_SUBST(IFACEINC)

dnl ****************************************************************
dnl On SCO Unix, there are ELF and COFF binaries.  We want elf to
dnl provide for dlopen() and friends.  With help from Tamas Laufer!
dnl ****************************************************************

case "$ARCH" in
    *sco*|*SCO*)
        AC_MSG_CHECKING("SCO-Unix.  See if we need -belf")
        old_cflags="$CFLAGS"
        CFLAGS="$CFLAGS -belf"
        AC_TRY_COMPILE(
        [
        ],
        [
        ],
        CMFLAGS="$CMFLAGS -belf"
        AC_MSG_RESULT(yes),
        AC_MSG_RESULT(no)
        CFLAGS="$old_cflags")
        ;;
esac


dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h \
		sys/select.h \
		sys/time.h \
		sys/sigevent.h \
		sys/types.h \
		sys/stat.h \
		sys/utsname.h \
		sys/param.h \
		sys/wait.h \
		limits.h \
		unistd.h \
		errno.h \
		strings.h \
		math.h)


AC_CHECK_LIB(m, pow)
AC_CHECK_FUNCS(setlocale)

dnl --------------------------------------------------------------------------
dnl Additional configure options added for xnc

AC_ARG_ENABLE(debug, [  --enable-debug          Turn on debugging output],
              xncdebug=yes,
              xncdebug=no)

if test "$xncdebug" = "yes"; then
    DEB="-g -DDEBUG_XNC"
else
    DEB=""
fi


AC_ARG_WITH(sdl, [  --with-sdl              Turn on SDL support instead of X11],
              sdl_support=yes,
              sdl_support=no)

if test "x$sdl_support" = "xyes"; then
    echo "SDL is ENABLED *******************"
    IFACEOBJS='$(SDLOBJS)'
    IFACELIBS='`sdl-config --libs` -lSDL_image'
    IFACEINC='`sdl-config --cflags` -I./sdl'
else
    echo "X11 is ENABLED *******************"
    AC_PATH_X
    AC_PATH_XTRA
    IFACEOBJS='$(X11OBJS) $(X11IMAGE)'
    IFACELIBS='$(XLIBS)'
    IFACEINC='$(XINC) -I./x11'
fi


out_lib=${LIBS}


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_TYPE_SIGNAL




dnl ---------------------- Checks for library functions -----------------

AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_CHECK_FUNCS( getcwd \
		mkdir \
		putenv \
		select \
		socket \
		seteuid \
		unsetenv \
		setutent \
		atexit
		)



CFLAGS=${CFLAGS--O}
LDFLAGS=${LDFLAGS--O}
CPPFLAGS="$CPPFLAGS"
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBS)
dnl# common parts of the Makefile
MCOMMON=./src/Make.common
AC_SUBST_FILE(MCOMMON)


dnl Some specific OS stuff

case "$ARCH" in
  *hppa*|*hpux*)
        # do nothing
        ;;
  *solaris*)
        if test "$GCC" = "yes"; then
		AC_MSG_CHECKING("whether we need -fpermissive")
		old_cflags="$CFLAGS"
		CFLAGS="-fpermissive $CFLAGS"
		AC_TRY_RUN(
		main()
		{ exit(0);
		},
	        if grep 'option `-fpermissive'"'" config.log >/dev/null; then
	           AC_MSG_RESULT(no)
	           CFLAGS="$old_cflags"
	        else
	           CFLAGS="$old_cflags -fpermissive"
	           AC_MSG_RESULT(yes)
	        fi,
	        AC_MSG_RESULT(no)
	        CFLAGS="$old_cflags",
	        AC_MSG_RESULT(no)
	        CFLAGS="$old_cflags")
        fi
        ;;
  *aix*)
        # do nothing
        ;;
  *darwin*)
        # do nothing
	;;
  *)
        # do nothing
        ;;
esac



AC_CONFIG_HEADER(src/include/config.h)
AC_OUTPUT( \
    src/Make.common \
    src/makefile \
    src/include/globals.h \
    src/image/makefile \
    Makefile)

 echo "ZINC=" >>src/make.conf
 echo "ZLIB=" >>src/make.conf
 echo "ZDEP=" >>src/make.conf
 echo "PNG="  >>src/make.conf
 echo "OPNGS=" >>src/make.conf
 echo "PNGINC=" >>src/make.conf
 echo "PNGLIB=" >>src/make.conf
 echo "PNGDEP=" >>src/make.conf


 echo "PSEUDO=-DPSEUDOCOLOR" >>src/make.conf
 echo "OPSEUDO=" >>src/make.conf
 pse="PseudoColor; TrueColor;"


 echo "XBM=" >>src/make.conf
 echo "OXBM=" >>src/make.conf
 xbm=""

 echo "BMP=" >>src/make.conf
 echo "OBMP=" >>src/make.conf
 bmp=""

 echo "XPM=" >>src/make.conf
 echo "OXPM=" >>src/make.conf
 xpm=""

 echo "PCX=" >>src/make.conf
 echo "OPCX=" >>src/make.conf
 pcx=""

 echo "TGA=" >>src/make.conf
 echo "OTGA=" >>src/make.conf
 targa=""

 echo "TIFF=" >>src/make.conf
 echo "OTIFF=" >>src/make.conf
 echo "TLIB=" >>src/make.conf
 tiff=""

 echo "PCD=" >>src/make.conf
 echo "OPCDS=" >>src/make.conf
 pcd=""

echo "---------------  X Welltris Project  ----------------------"

echo "
Configuration:

  Source code location:     ${srcdir}
  C Compiler:               ${CC}
  C Compiler flags:         ${CFLAGS}
  C++ Compiler:             ${CXX}
  Libraries:                ${out_lib}
  Install path:             ${prefix}/bin
  Man pages path:           ${prefix}/man
  X11 versions:            ${X_LIBS}
  X Visuals:                ${pse}
  Image library:            GIF
"
echo "-----------------------------------------------------------"
echo ""
echo "Type 'make' for building XWelltris binaries, and after that"
echo "do 'make install' as 'root'."
echo ""
echo "Thank you..."


